{"version":3,"sources":["routes.js","components/AppBar/AppBar.jsx","servises/imdbApi.js","components/PageButton/PageButton.jsx","components/MoviesPage/MoviesPage.jsx","views/HomeView.jsx","components/SearchMovies/SearchMovies.jsx","views/MoviesFindView.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","components/MovieDetails/MovieDetails.jsx","views/MovieDetailsView.jsx","App.js","index.js"],"names":["AppBar","className","exact","to","routes","activeClassName","AUTH_KEY","axios","defaults","baseURL","get","movies","data","console","log","message","movie_id","movie","PageButton","onClick","type","MoviesPage","this","props","moviesData","location","items","map","image","title","id","pathname","state","from","src","alt","Component","withRouter","HomeView","currentPage","error","changePage","setState","prevState","prevProps","imdbApi","then","catch","err","SearchMovies","input","handleInput","event","target","value","handleSubmit","preventDefault","onSubmit","query","autoComplete","autoFocus","placeholder","onChange","MoviesFindView","isLoading","changeQuery","newQuery","parsedQuery","queryString","parse","search","movieApi","getMovieFromQuery","prev","finally","history","push","url","match","CircularProgress","CastView","castData","movieId","params","getCast","cast","profile_path","name","character","ReviewsView","reviewsData","getReviews","results","author","content","movieData","data-title","data-videospider_tv","path","component","Cast","Reviews","MovieDetailsPage","handleGoBack","App","MovieDetailsView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07a0a2b3.chunk.js","sourcesContent":["/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport default {\r\n  home: '/',\r\n  moviesFind: '/movies',\r\n  moviesDetails: '/movies/:movieId',\r\n  cast: '/movies/:movieId/cast',\r\n  reviews: '/movies/:movieId/reviews',\r\n};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from '../../routes';\r\n\r\nconst AppBar = () => {\r\n  return (\r\n    <ul className=\"nav-list\">\r\n      <li className=\"nav-list__item\">\r\n        <NavLink\r\n          exact\r\n          to={routes.home}\r\n          className=\"nav-list__link\"\r\n          activeClassName=\"nav-list__link--active\"\r\n        >\r\n          Home\r\n        </NavLink>\r\n      </li>\r\n      <li className=\"nav-list__item\">\r\n        <NavLink\r\n          exact\r\n          to={routes.moviesFind}\r\n          className=\"nav-list__link\"\r\n          activeClassName=\"nav-list__link--active\"\r\n        >\r\n          Movies\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default AppBar;\r\n","import axios from 'axios';\r\n\r\nconst AUTH_KEY = 'k_wv206swt';\r\naxios.defaults.baseURL = 'https://imdb-api.com/API';\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport default {\r\n  async getTop() {\r\n    try {\r\n      const movies = await axios.get(`/Top250Movies/${AUTH_KEY}`);\r\n\r\n      return movies.data;\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  },\r\n\r\n  async getMovie(movie_id) {\r\n    try {\r\n      const movie = await axios.get(`/SearchMovie/${AUTH_KEY}/${movie_id}`);\r\n\r\n      return movie.data;\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  },\r\n\r\n  async getMovieFromQuery(query) {\r\n    return await axios\r\n      .get(`/Search/${AUTH_KEY}/${query}`)\r\n      .then(movies => movies.data);\r\n  },\r\n\r\n  async getReviews(movieId) {\r\n    return await axios\r\n      .get(`​​/Reviews​/${AUTH_KEY}​/${movieId}`)\r\n      .then(reviews => reviews.data);\r\n  },\r\n\r\n  async getCast(movieId) {\r\n    return await axios\r\n      .get(`​/FullCast​/${AUTH_KEY}​/${movieId}`)\r\n      .then(cast => cast.data);\r\n  },\r\n};\r\n","const PageButton = ({ onClick }) => {\r\n  return (\r\n    <div className=\"button-container\">\r\n      <button onClick={onClick} type=\"submit\" className=\"button\">\r\n        Show more\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageButton;\r\n","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport PageButton from '../PageButton';\r\n\r\nclass MoviesPage extends Component {\r\n  render() {\r\n    const { moviesData, onClick, location } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {!!moviesData?.items && (\r\n          <>\r\n            <ul className=\"moviesList\">\r\n              {moviesData.items.map(({ image, title, id }) => {\r\n                return (\r\n                  <li key={id} className=\"moviesList__item\">\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/movies/${id}`,\r\n                        state: {\r\n                          from: location,\r\n                        },\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={image}\r\n                        alt={image}\r\n                        className=\"moviesList__img\"\r\n                      />\r\n                      <h3 className=\"moviesList__title\">{title}</h3>\r\n                    </Link>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n            <PageButton onClick={onClick} />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MoviesPage);\r\n\r\nMoviesPage.propTypes = {\r\n  moviesData: PropTypes.array.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  location: PropTypes.object.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\n\r\nimport imdbApi from '../servises/imdbApi';\r\nimport MoviesPage from '../components/MoviesPage';\r\n\r\nexport default class HomeView extends Component {\r\n  state = {\r\n    moviesData: {},\r\n    currentPage: 1,\r\n    error: '',\r\n  };\r\n\r\n  changePage = () => {\r\n    this.setState(prevState => {\r\n      return { currentPage: prevState.currentPage + 1 };\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    //Fetch new page\r\n  }\r\n\r\n  componentDidMount() {\r\n    imdbApi\r\n      .getTop()\r\n      .then(data => this.setState({ moviesData: data }))\r\n      .catch(err => this.setState({ error: err.message }));\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n    return (\r\n      <div>\r\n        {error && <h2>{error}</h2>}\r\n        <MoviesPage\r\n          moviesData={this.state.moviesData}\r\n          onClick={this.changePage}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class SearchMovies extends Component {\r\n  state = {\r\n    input: '',\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.query !== prevProps.query) {\r\n      this.setState({ input: this.props.query });\r\n    }\r\n  }\r\n\r\n  handleInput = event => {\r\n    this.setState({ input: event.target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.input);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          value={this.state.input}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search movies...\"\r\n          onChange={this.handleInput}\r\n        />\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\"></span>\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nSearchMovies.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport queryString from 'query-string';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport movieApi from '../servises/movieApi';\r\nimport MoviesPage from '../components/MoviesPage';\r\nimport SearchMovies from '../components/SearchMovies';\r\n\r\nexport default class MoviesFindView extends Component {\r\n  state = {\r\n    moviesData: [],\r\n    currentPage: 1,\r\n    query: '',\r\n    error: '',\r\n    isLoading: false,\r\n  };\r\n\r\n  changePage = () => {\r\n    this.setState(prevState => {\r\n      return { currentPage: prevState.currentPage + 1 };\r\n    });\r\n  };\r\n\r\n  changeQuery = newQuery => {\r\n    this.setState({ currentPage: 1 });\r\n    this.setState({ query: newQuery });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const parsedQuery = queryString.parse(this.props.location.search);\r\n\r\n    parsedQuery.query && this.setState({ query: parsedQuery.query });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.query === '') return;\r\n\r\n    //Fetch new page\r\n    if (this.state.currentPage !== prevState.currentPage) {\r\n      movieApi\r\n        .getMovieFromQuery(this.state.query, this.state.currentPage)\r\n        .then(data =>\r\n          this.setState(prev => {\r\n            return {\r\n              isLoading: true,\r\n              moviesData: [...prev.moviesData, ...data],\r\n            };\r\n          }),\r\n        )\r\n        .catch(err => this.setState({ error: err.message }))\r\n        .finally(() =>\r\n          this.setState({\r\n            isLoading: false,\r\n          }),\r\n        );\r\n    }\r\n\r\n    if (this.state.query !== prevState.query) {\r\n      this.setState({ moviesData: [] });\r\n\r\n      movieApi\r\n        .getMovieFromQuery(this.state.query, this.state.currentPage)\r\n        .then(data =>\r\n          this.setState(prev => {\r\n            return {\r\n              isLoading: true,\r\n              moviesData: [...prev.moviesData, ...data],\r\n            };\r\n          }),\r\n        )\r\n        .catch(err => this.setState({ error: err.message }))\r\n        .finally(() =>\r\n          this.setState({\r\n            isLoading: false,\r\n          }),\r\n        );\r\n\r\n      this.props.history.push({\r\n        pathname: this.props.location.pathname,\r\n        search: `query=${this.state.query}`,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SearchMovies onSubmit={this.changeQuery} query={this.state.query} />\r\n        <MoviesPage\r\n          moviesData={this.state.moviesData}\r\n          onClick={this.changePage}\r\n          url={this.props.match.url}\r\n        />\r\n        {this.state.isLoading && (\r\n          <div className=\"spinner\">\r\n            <CircularProgress />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport movieApi from '../../servises/movieApi';\r\n\r\nexport default class CastView extends Component {\r\n  state = {\r\n    castData: [],\r\n    error: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n\r\n    movieApi\r\n      .getCast(movieId)\r\n      .then(({ data }) => this.setState({ castData: data.cast }))\r\n      .catch(err => this.setState({ error: err.message }));\r\n  }\r\n\r\n  render() {\r\n    const { castData } = this.state;\r\n    const posterBaseUrl = 'https://image.tmdb.org/t/p/w500';\r\n\r\n    return (\r\n      <div>\r\n        <ul className=\"cast\">\r\n          {castData.map(({ profile_path, name, character, id }) => {\r\n            return (\r\n              <li key={id} className=\"cast__item\">\r\n                <img\r\n                  className=\"cast__img\"\r\n                  src={posterBaseUrl + profile_path}\r\n                  alt={name}\r\n                />\r\n                <h3 className=\"cast__name\">{name}</h3>\r\n                <p className=\"cast__character\">Character: {character}</p>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport movieApi from '../../servises/movieApi';\r\n\r\nexport default class ReviewsView extends Component {\r\n  state = {\r\n    reviewsData: [],\r\n    error: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n\r\n    movieApi\r\n      .getReviews(movieId)\r\n      .then(({ data }) => this.setState({ reviewsData: data.results }))\r\n      .catch(err => this.setState({ error: err.message }));\r\n  }\r\n\r\n  render() {\r\n    const { reviewsData } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {this.state.error && <h1>{this.state.error}</h1>}\r\n        {!this.state.error && (\r\n          <ul>\r\n            {reviewsData.map(({ author, content, id }) => {\r\n              return (\r\n                <li key={id}>\r\n                  <h2>Author: {author}</h2>\r\n                  <p>{content}</p>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link, Route, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport routes from '../../routes';\r\nimport Cast from '../Cast/Cast';\r\nimport Reviews from '../Reviews/Reviews';\r\n\r\nconst MovieDetails = ({ movieData, location }) => {\r\n  const { image, title, id } = movieData;\r\n\r\n  return (\r\n    <div className=\"movie\">\r\n      <h1 className=\"movie__title\">{title}</h1>\r\n      <div className=\"movie__block-title\">\r\n        <img className=\"movie__img\" src={image} alt={title} />\r\n      </div>\r\n      <div id=\"yohoho\" data-title={title} data-videospider_tv=\"0\"></div>\r\n      <div className=\"movie__block-add\">\r\n        <p className=\"movie__text\">Additional information</p>\r\n        <ul className=\"movie__add\">\r\n          <li>\r\n            <Link\r\n              to={{\r\n                pathname: `/movies/${id}/cast`,\r\n                state: {\r\n                  from: location?.state?.from,\r\n                },\r\n              }}\r\n            >\r\n              Cast\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <Link\r\n              to={{\r\n                pathname: `/movies/${id}/reviews`,\r\n                state: {\r\n                  from: location?.state?.from,\r\n                },\r\n              }}\r\n            >\r\n              Reviews\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <Route path={routes.cast} component={Cast} />\r\n      <Route path={routes.reviews} component={Reviews} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(MovieDetails);\r\n\r\nMovieDetails.propTypes = {\r\n  movieData: PropTypes.object.isRequired,\r\n};\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport imdbApi from '../servises/imdbApi';\r\nimport MovieDetails from '../components/MovieDetails';\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = {\r\n    movieData: {},\r\n    error: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n\r\n    imdbApi\r\n      .getMovie(movieId)\r\n      .then(({ results }) => this.setState({ movieData: results[0] }))\r\n      .catch(err => this.setState({ error: err.message }));\r\n  }\r\n\r\n  handleGoBack = () => {\r\n    const { location } = this.props;\r\n\r\n    location.state?.from\r\n      ? this.props.history.push(location.state.from)\r\n      : this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { movieData } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <button type=\"button\" onClick={this.handleGoBack} className=\"button\">\r\n          Go back\r\n        </button>\r\n        {this.state.error && <h2>{this.state.error}</h2>}\r\n        <MovieDetails movieData={movieData} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MovieDetailsPage);\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport routes from './routes';\r\nimport AppBar from './components/AppBar';\r\nimport HomeView from './views/HomeView';\r\nimport MoviesFindView from './views/MoviesFindView';\r\nimport MovieDetailsView from './views/MovieDetailsView';\r\n\r\nexport class App extends Component {\r\n  static propTypes = {};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <AppBar />\r\n        <Switch>\r\n          <Route exact path={routes.home} component={HomeView} />\r\n          <Route path={routes.moviesDetails} component={MovieDetailsView} />\r\n          <Route path={routes.moviesFind} component={MoviesFindView} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </BrowserRouter>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}