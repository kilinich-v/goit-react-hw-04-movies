{"version":3,"sources":["routes.js","components/AppBar/AppBar.jsx","servises/movieApi.js","components/PageButton/PageButton.jsx","components/MoviesPage/MoviesPage.jsx","views/HomeView.jsx","components/SearchMovies/SearchMovies.jsx","views/MoviesFindView.jsx","components/Cast/Cast.jsx","components/Reviews/Reviews.jsx","components/MovieDetails/MovieDetails.jsx","views/MovieDetailsView.jsx","App.js","index.js"],"names":["AppBar","className","exact","to","routes","activeClassName","AUTH_TOKEN","axios","defaults","baseURL","currentPage","get","then","movies","data","results","movie_id","movie","query","movieId","PageButton","onClick","type","MoviesPage","this","props","moviesData","location","length","map","poster_path","original_title","title","id","pathname","state","from","src","alt","Component","withRouter","HomeView","error","changePage","setState","prevState","prevProps","movieApi","catch","err","message","SearchMovies","input","handleInput","event","target","value","handleSubmit","preventDefault","onSubmit","autoComplete","autoFocus","placeholder","onChange","MoviesFindView","isLoading","changeQuery","newQuery","parsedQuery","queryString","parse","search","prev","finally","history","push","url","match","CircularProgress","CastView","castData","params","cast","profile_path","name","character","ReviewsView","reviewsData","author","content","MovieDetails","movieData","genres","overview","vote_average","path","component","Cast","Reviews","MovieDetailsPage","handleGoBack","App","MovieDetailsView","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6451c459.chunk.js","sourcesContent":["/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport default {\r\n  home: '/',\r\n  moviesFind: '/movies',\r\n  moviesDetails: '/movies/:movieId',\r\n  cast: '/movies/:movieId/cast',\r\n  reviews: '/movies/:movieId/reviews',\r\n};","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport routes from '../../routes';\r\n\r\nconst AppBar = () => {\r\n  return (\r\n    <ul className=\"nav-list\">\r\n      <li className=\"nav-list__item\">\r\n        <NavLink\r\n          exact\r\n          to={routes.home}\r\n          className=\"nav-list__link\"\r\n          activeClassName=\"nav-list__link--active\"\r\n        >\r\n          Home\r\n        </NavLink>\r\n      </li>\r\n      <li className=\"nav-list__item\">\r\n        <NavLink\r\n          exact\r\n          to={routes.moviesFind}\r\n          className=\"nav-list__link\"\r\n          activeClassName=\"nav-list__link--active\"\r\n        >\r\n          Movies\r\n        </NavLink>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default AppBar;\r\n","import axios from 'axios';\r\n\r\nconst AUTH_TOKEN = 'ecafb96f29eb9b2017ec13981edc2764';\r\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\r\n\r\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\r\nexport default {\r\n  getTrendingMovie(currentPage) {\r\n    return axios\r\n      .get(`/trending/movie/week?api_key=${AUTH_TOKEN}&page=${currentPage}`)\r\n      .then(movies => movies.data.results);\r\n  },\r\n\r\n  getMovie(movie_id) {\r\n    return axios\r\n      .get(`/movie/${movie_id}?api_key=${AUTH_TOKEN}`)\r\n      .then(movie => movie);\r\n  },\r\n\r\n  getMovieFromQuery(query, currentPage) {\r\n    return axios\r\n      .get(\r\n        `/search/movie?api_key=${AUTH_TOKEN}&query=${query}&page=${currentPage}`,\r\n      )\r\n      .then(movies => movies.data.results);\r\n  },\r\n\r\n  getReviews(movieId) {\r\n    return axios.get(\r\n      `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${AUTH_TOKEN}`,\r\n    );\r\n  },\r\n\r\n  getCast(movieId) {\r\n    return axios.get(\r\n      `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${AUTH_TOKEN}`,\r\n    );\r\n  },\r\n};\r\n","const PageButton = ({ onClick }) => {\r\n  return (\r\n    <div className=\"button-container\">\r\n      <button onClick={onClick} type=\"submit\" className=\"button\">\r\n        Show more\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PageButton;\r\n","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport PageButton from '../PageButton';\r\n\r\nclass MoviesPage extends Component {\r\n  render() {\r\n    const { moviesData, onClick, location } = this.props;\r\n\r\n    const posterBaseUrl = 'https://image.tmdb.org/t/p/w500';\r\n\r\n    return (\r\n      <>\r\n        {!!moviesData.length && (\r\n          <>\r\n            <ul className=\"moviesList\">\r\n              {moviesData.map(({ poster_path, original_title, title, id }) => {\r\n                return (\r\n                  <li key={id} className=\"moviesList__item\">\r\n                    <Link\r\n                      to={{\r\n                        pathname: `/movies/${id}`,\r\n                        state: {\r\n                          from: location,\r\n                        },\r\n                      }}\r\n                    >\r\n                      <img\r\n                        src={posterBaseUrl + poster_path}\r\n                        alt={original_title}\r\n                        className=\"moviesList__img\"\r\n                      />\r\n                      <h3 className=\"moviesList__title\">{title}</h3>\r\n                    </Link>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n            <PageButton onClick={onClick} />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(MoviesPage);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport movieApi from '../servises/movieApi';\r\nimport MoviesPage from '../components/MoviesPage';\r\n\r\nexport default class HomeView extends Component {\r\n  state = {\r\n    moviesData: [],\r\n    currentPage: 1,\r\n    error: '',\r\n  };\r\n\r\n  changePage = () => {\r\n    this.setState(prevState => {\r\n      return { currentPage: prevState.currentPage + 1 };\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    //Fetch new page\r\n    if (this.state.currentPage !== prevState.currentPage) {\r\n      movieApi\r\n        .getTrendingMovie(this.state.currentPage)\r\n        .then(data =>\r\n          this.setState({ moviesData: [...prevState.moviesData, ...data] }),\r\n        )\r\n        .catch(err => this.setState({ error: err.message }));\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    movieApi\r\n      .getTrendingMovie(this.state.currentPage)\r\n      .then(data => this.setState({ moviesData: data }))\r\n      .catch(err => this.setState({ error: err.message }));\r\n  }\r\n\r\n  render() {\r\n    const { error } = this.state;\r\n    return (\r\n      <div>\r\n        {error && <h2>{error}</h2>}\r\n        <MoviesPage\r\n          moviesData={this.state.moviesData}\r\n          onClick={this.changePage}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class SearchMovies extends Component {\r\n  state = {\r\n    input: '',\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.query !== prevProps.query) {\r\n      this.setState({ input: this.props.query });\r\n    }\r\n  }\r\n\r\n  handleInput = event => {\r\n    this.setState({ input: event.target.value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.input);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          value={this.state.input}\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search movies...\"\r\n          onChange={this.handleInput}\r\n        />\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\"></span>\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport queryString from 'query-string';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport movieApi from '../servises/movieApi';\r\nimport MoviesPage from '../components/MoviesPage';\r\nimport SearchMovies from '../components/SearchMovies';\r\n\r\nexport default class MoviesFindView extends Component {\r\n  state = {\r\n    moviesData: [],\r\n    currentPage: 1,\r\n    query: '',\r\n    error: '',\r\n    isLoading: false,\r\n  };\r\n\r\n  changePage = () => {\r\n    this.setState(prevState => {\r\n      return { currentPage: prevState.currentPage + 1 };\r\n    });\r\n  };\r\n\r\n  changeQuery = newQuery => {\r\n    this.setState({ currentPage: 1 });\r\n    this.setState({ query: newQuery });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const parsedQuery = queryString.parse(this.props.location.search);\r\n\r\n    parsedQuery.query && this.setState({ query: parsedQuery.query });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.query === '') return;\r\n\r\n    //Fetch new page\r\n    if (this.state.currentPage !== prevState.currentPage) {\r\n      movieApi\r\n        .getMovieFromQuery(this.state.query, this.state.currentPage)\r\n        .then(data =>\r\n          this.setState(prev => {\r\n            return {\r\n              isLoading: true,\r\n              moviesData: [...prev.moviesData, ...data],\r\n            };\r\n          }),\r\n        )\r\n        .catch(err => this.setState({ error: err.message }))\r\n        .finally(() =>\r\n          this.setState({\r\n            isLoading: false,\r\n          }),\r\n        );\r\n    }\r\n\r\n    if (this.state.query !== prevState.query) {\r\n      this.setState({ moviesData: [] });\r\n\r\n      movieApi\r\n        .getMovieFromQuery(this.state.query, this.state.currentPage)\r\n        .then(data =>\r\n          this.setState(prev => {\r\n            return {\r\n              isLoading: true,\r\n              moviesData: [...prev.moviesData, ...data],\r\n            };\r\n          }),\r\n        )\r\n        .catch(err => this.setState({ error: err.message }))\r\n        .finally(() =>\r\n          this.setState({\r\n            isLoading: false,\r\n          }),\r\n        );\r\n\r\n      this.props.history.push({\r\n        pathname: this.props.location.pathname,\r\n        search: `query=${this.state.query}`,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SearchMovies onSubmit={this.changeQuery} query={this.state.query} />\r\n        <MoviesPage\r\n          moviesData={this.state.moviesData}\r\n          onClick={this.changePage}\r\n          url={this.props.match.url}\r\n        />\r\n        {this.state.isLoading && (\r\n          <div className=\"spinner\">\r\n            <CircularProgress />\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport movieApi from '../../servises/movieApi';\r\n\r\nexport default class CastView extends Component {\r\n  state = {\r\n    castData: [],\r\n    error: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n\r\n    movieApi\r\n      .getCast(movieId)\r\n      .then(({ data }) => this.setState({ castData: data.cast }))\r\n      .catch(err => this.setState({ error: err.message }));\r\n  }\r\n\r\n  render() {\r\n    const { castData } = this.state;\r\n    const posterBaseUrl = 'https://image.tmdb.org/t/p/w500';\r\n\r\n    return (\r\n      <div>\r\n        <ul className=\"cast\">\r\n          {castData.map(({ profile_path, name, character, id }) => {\r\n            return (\r\n              <li key={id} className=\"cast__item\">\r\n                <img\r\n                  className=\"cast__img\"\r\n                  src={posterBaseUrl + profile_path}\r\n                  alt={name}\r\n                />\r\n                <h3 className=\"cast__name\">{name}</h3>\r\n                <p className=\"cast__character\">Character: {character}</p>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport movieApi from '../../servises/movieApi';\r\n\r\nexport default class ReviewsView extends Component {\r\n  state = {\r\n    reviewsData: [],\r\n    error: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n\r\n    movieApi\r\n      .getReviews(movieId)\r\n      .then(({ data }) => this.setState({ reviewsData: data.results }))\r\n      .catch(err => this.setState({ error: err.message }));\r\n  }\r\n\r\n  render() {\r\n    const { reviewsData } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {this.state.error && <h1>{this.state.error}</h1>}\r\n        {!this.state.error && (\r\n          <ul>\r\n            {reviewsData.map(({ author, content, id }) => {\r\n              return (\r\n                <li key={id}>\r\n                  <h2>Author: {author}</h2>\r\n                  <p>{content}</p>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link, Route } from 'react-router-dom';\r\nimport routes from '../../routes';\r\nimport Cast from '../Cast/Cast';\r\nimport Reviews from '../Reviews/Reviews';\r\n\r\nconst MovieDetails = ({ movieData }) => {\r\n  const posterBaseUrl = 'https://image.tmdb.org/t/p/w500';\r\n  const { poster_path, title, genres, overview, vote_average, id } = movieData;\r\n\r\n  return (\r\n    <div className=\"movie\">\r\n      <h1 className=\"movie__title\">{title}</h1>\r\n      <div className=\"movie__block-title\">\r\n        <img\r\n          className=\"movie__img\"\r\n          src={posterBaseUrl + poster_path}\r\n          alt={title}\r\n        />\r\n        <p className=\"movie__text\">{vote_average}</p>\r\n      </div>\r\n      <div className=\"movie__block-overview\">\r\n        <h2 className=\"movie__subtitle\">Overview</h2>\r\n        <p className=\"movie__text\">{overview}</p>\r\n        <h2 className=\"movie__subtitle\">Genres</h2>\r\n        <ul className=\"movie__genres\">\r\n          {genres &&\r\n            genres.map(({ id, name }) => {\r\n              return <li key={id}>{name}</li>;\r\n            })}\r\n        </ul>\r\n      </div>\r\n\r\n      <div className=\"movie__block-add\">\r\n        <p className=\"movie__text\">Additional information</p>\r\n        <ul className=\"movie__add\">\r\n          <li>\r\n            <Link to={`/movies/${id}/cast`}>Cast</Link>\r\n          </li>\r\n          <li>\r\n            <Link to={`/movies/${id}/reviews`}>Reviews</Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <Route path={routes.cast} component={Cast} />\r\n      <Route path={routes.reviews} component={Reviews} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route } from 'react-router-dom';\r\nimport movieApi from '../servises/movieApi';\r\nimport MovieDetails from '../components/MovieDetails';\r\n\r\nexport default class MovieDetailsPage extends Component {\r\n  state = {\r\n    movieData: {},\r\n    error: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n\r\n    movieApi\r\n      .getMovie(movieId)\r\n      .then(({ data }) => this.setState({ movieData: data }))\r\n      .catch(err => this.setState({ error: err.message }));\r\n  }\r\n\r\n  handleGoBack = () => {\r\n    const { location } = this.props;\r\n\r\n    location.state?.from\r\n      ? this.props.history.push(location.state.from)\r\n      : this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    const { movieData } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <button type=\"button\" onClick={this.handleGoBack} className=\"button\">\r\n          Go back\r\n        </button>\r\n        {this.state.error && <h2>{this.state.error}</h2>}\r\n        <MovieDetails movieData={movieData} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport routes from './routes';\r\nimport AppBar from './components/AppBar';\r\nimport HomeView from './views/HomeView';\r\nimport MoviesFindView from './views/MoviesFindView';\r\nimport MovieDetailsView from './views/MovieDetailsView';\r\n\r\nexport class App extends Component {\r\n  static propTypes = {};\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <AppBar />\r\n        <Switch>\r\n          <Route exact path={routes.home} component={HomeView} />\r\n          <Route path={routes.moviesDetails} component={MovieDetailsView} />\r\n          <Route path={routes.moviesFind} component={MoviesFindView} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}